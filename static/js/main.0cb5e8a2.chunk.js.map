{"version":3,"sources":["components/shopping-cart-app/CartItem.jsx","components/shopping-cart-app/Cart.jsx","components/react-router-app/About.jsx","components/react-router-app/Contact.jsx","components/react-router-app/Shop.jsx","components/react-router-app/Home.jsx","components/react-router-app/ReactRouter.jsx","components/fetchAPI-app/FetchAPI.jsx","components/gsap-app/Gsap.jsx","components/recipe-app/RecipeItem.jsx","components/recipe-app/Recipe.jsx","components/todo-app/TodoForm.jsx","components/todo-app/TodoItem.jsx","components/todo-app/TodoItems.jsx","components/todo-app/Todo.jsx","App.jsx","serviceWorker.js","index.js"],"names":["CartItem","id","name","price","qty","updateQty","className","onClick","disabled","toFixed","initialItems","Cart","initialState","JSON","parse","window","localStorage","getItem","useState","items","setItems","useEffect","setItem","stringify","newQty","newItems","map","item","grandTotal","reduce","total","key","About","Contact","Shop","Home","Nav","to","ReactRouter","path","exact","component","FetchAPI","innerWidth","windowWidth","setwindowWidth","count","setCount","addEventListener","document","title","tl","gsap","timeline","Gsap","box","hello","data","setData","x","ease","RecipeItem","url","image","calories","ingredients","href","src","alt","ingredient","index","text","Recipe","recipes","setRecipes","search","setSearch","query","setQuery","numberOfItems","setNumberofItems","getRecipe","a","fetch","response","json","hits","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","recipe","label","TodoForm","addTodo","undefined","task","completed","todoItem","setTodoItem","trim","Date","now","TodoItem","removeTodo","toggleComplete","TodoItems","todoLists","Todo","setTodoLists","filter","completUpdated","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0cb5e8a2.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction CartItem({ id, name, price, qty, updateQty }) {\n  function decrementQty() {\n    updateQty(id, qty - 1);\n  }\n\n  function incrementQty() {\n    updateQty(id, qty + 1);\n  }\n\n  return (\n    <li className=\"cart-item\">\n      <span className=\"item-name\">{name}</span>\n      <span className=\"item-price\">€{price}</span>\n      <div className=\"quantity\">\n        <button onClick={decrementQty} disabled={qty <= 0}>\n          -\n        </button>\n        <span>{qty}</span>\n        <button onClick={incrementQty}>+</button>\n      </div>\n      <span className=\"sub-total\">Total: €{(qty * price).toFixed(2)}</span>\n    </li>\n  );\n}\n\nexport default CartItem;\n","import React, { useState, useEffect } from \"react\";\nimport CartItem from \"./CartItem\";\n\nlet initialItems = [\n  { id: 1, name: \"Salmon\", price: 3.99, qty: 0},\n  { id: 2, name: \"Oyster Sauce\", price: 2.49, qty: 0},\n  { id: 3, name: \"Noodle\", price: 0.8, qty: 0}\n];\n\n\n\nfunction Cart() {\n  let initialState = JSON.parse(window.localStorage.getItem(\"items\"));\n  const [items, setItems] = useState(initialState || initialItems);\n\n  useEffect(() => {\n    window.localStorage.setItem(\"items\", JSON.stringify(items));\n  }, [items]);\n\n  const updateQty = (id, newQty) => {\n    const newItems = items.map((item) => {\n      if (item.id === id) {\n        return { ...item, qty: newQty };\n      }\n      return item;\n    });\n\n    setItems(newItems);\n  };\n\n  const grandTotal = items\n    .reduce((total, item) => total + item.qty * item.price, 0)\n    .toFixed(2);\n\n  return (\n    <div className=\"shopping-cart-app app-container\">\n      <div className=\"app\">\n        <h1 className=\"cart-title\">Shopping Cart</h1>\n        <ul className=\"cart-items\">\n          {items.map((item) => (\n            <CartItem key={item.id} updateQty={updateQty} {...item} />\n          ))}\n        </ul>\n\n        <h1 className=\"grand-total\">\n          <span>Total: €</span>\n          <span>{grandTotal}</span>\n        </h1>\n      </div>\n    </div>\n  );\n}\n\nexport default Cart;\n","import React from 'react'\n\nfunction About() {\n    return (\n        <div className=\"section\">\n            This is an About section\n        </div>\n    )\n}\n\nexport default About\n","import React from 'react'\n\nfunction Contact() {\n    return (\n        <div className=\"section\">\n            This is a Contact section\n        </div>\n    )\n}\n\nexport default Contact\n","import React from 'react'\n\nfunction Shop() {\n    return (\n        <div className=\"section\">\n            This is a Shop section\n        </div>\n    )\n}\n\nexport default Shop\n","import React from 'react'\n\nfunction Home() {\n    return (\n        <div className=\"section\">\n            This is a Home section\n        </div>\n    )\n}\n\nexport default Home\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport About from \"./About\";\nimport Contact from \"./Contact\";\nimport Shop from \"./Shop\";\n// import Nav from './Nav'\nimport Home from \"./Home\";\n\nfunction Nav() {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/contact\">Contact</Link>\n        </li>\n\n        <li>\n          <Link to=\"/shop\">Shop</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nfunction ReactRouter() {\n  return (\n    <Router>\n      <div className=\"react-router-app app-container\">\n        <div className=\"app\">\n          <Nav />\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/about\" exact component={About} />\n            <Route path=\"/:contact\" component={Contact} />\n            <Route component={Shop} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default ReactRouter;\n","import React, { useEffect, useState } from \"react\";\n\n// function useFetch(url) {\n  // let [data, setData] = useState(null);\n  // let [loading, setLoading] = useState(true);\n\n  // useEffect(async () => {\n  //   const response = await fetch(url);\n  //   const data = await response.json();\n  //   const [item] = data.results;\n  //   setData(item);\n  //   setLoading(false);\n  // }, []);\n\n  // return [data, loading];\n// }\n\n\nfunction FetchAPI() {\n  // let [data, loading] = useFetch(\"https://api.randomuser.me/\");\n\n  let [windowWidth, setwindowWidth] = useState(window.innerWidth);\n  let [count, setCount] = useState(0);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => {\n      setwindowWidth(window.innerWidth);\n    });\n\n    return () => {\n      window.addEventListener(\"resize\", () => {\n        setwindowWidth(window.innerWidth);\n      });\n    };\n  }, [windowWidth]);\n\n  useEffect(() => {\n    document.title = `you clicked ${count} times`;\n  });\n\n  return (\n    <div className=\"fetch-api-app app-container\">\n      <div className=\"app\">\n        <h1>hello from fetch api app</h1>\n        <section>\n          <p>you clicked {count} times</p>\n\n          <button\n            onClick={() => {\n              setCount(count + 1);\n            }}\n          >\n            click me\n          </button>\n        </section>\n\n        <section>\n          {/* {loading ? <h2>loading ..</h2> : <h2>{data.name.first}</h2>} */}\n        </section>\n      </div>\n    </div>\n  );\n}\n\nexport default FetchAPI;\n","import React, {useEffect, useState} from \"react\";\nimport gsap from 'gsap'\n\nconst tl = gsap.timeline();\n\n\nfunction Gsap({box, hello}) {\n  const [count, setCount] = useState(0)\n  const [data, setData] = useState(10)\n\n  useEffect(()=>{\n    tl.to('.box-1', 1 ,{x: 400} )\n    .to('.box-2', 2 ,{ x: 400, ease:\"exppo.inOut\"}, \"box\" )\n    .to('.box-3', 3 ,{ x: 400, ease:\"exppo.inOut\"}, \"+=3\" )\n    .to('.box-4', 1, { x: 400, ease:\"exppo.inOut\"}, \"box+=1\" )\n  },[data])\n\n\n  return (\n    <div className=\"gsap-app app-container\">\n      <div className=\"app\">\n        <button onClick={()=>{setCount(count + 2)}}>click me</button>\n        <button onClick={()=>{setData(data + 2)}}>click me</button>\n        <div className=\"box box-1\"></div>\n        <div className=\"box box-2\"></div>\n        <div className=\"box box-3\"></div>\n        <div className=\"box box-4\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Gsap;\n","import React from 'react'\n\nfunction RecipeItem({title, url, image, calories, ingredients}){\n\n    return (\n        <div className=\"recipe-item\">\n          <h1 className=\"title\">{title}</h1>\n          <a href={url}><img className=\"food-image\" src={image} alt=\"food image\"/></a>\n          <p className=\"calories\">{calories.toFixed(2)} calories</p>\n          <ul className=\"recipe-lists\">\n              {ingredients.map((ingredient, index) => (\n                 <li className=\"recipe-list\" key={index}><span>{index+1}. </span>{ingredient.text}</li>\n             ))}\n          </ul>\n        </div>\n    )\n}\n\nexport default RecipeItem\n","import React, {useEffect, useState} from 'react'\nimport RecipeItem from './RecipeItem.jsx'\n\nfunction Recipe() {\n    const APP_ID = '083af12b'\n    const APP_KEY = '933b6ab79e9afb60a0ac794c6868bca6'\n\n    const [recipes, setRecipes] = useState([])\n    const [search, setSearch] = useState(\"\")\n    const [query, setQuery] = useState('pasta')\n    const [numberOfItems, setNumberofItems] = useState(9)\n\n    useEffect(()=>{\n        getRecipe()\n    },[query,numberOfItems])\n\n    let getRecipe = async () => {\n        const url = `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&from=0&to=${numberOfItems}`\n        const response = await fetch(url)\n        const data = await response.json()\n        setRecipes(data.hits)\n    }\n\n    let updateSearch = (e) => {\n        setSearch(e.target.value)\n    }\n\n    let getQuery = (e) => {\n        e.preventDefault()\n        setQuery(search)\n        setSearch(\"\")\n    }\n\n    let loadMore = () => {\n        setNumberofItems(numberOfItems * 2)\n    }\n\n\n\n    return (\n        <div className=\"recipe-app app-container\">\n            <div className=\"app\">\n\n                <div className=\"search-bar\">\n                    <form onSubmit={getQuery}>\n                        <input type=\"text\" placeholder=\"search recipes\" value={search} onChange={updateSearch}/>\n                        <button className=\"btn\" type=\"submit\">Search</button>\n                    </form>\n                </div>\n\n                <div className=\"recipe-items\">\n                    {recipes.map((recipe, index) => (\n                    <RecipeItem\n                        key={index}\n                        title={recipe.recipe.label}\n                        url={recipe.recipe.url}\n                        image={recipe.recipe.image}\n                        calories={recipe.recipe.calories}\n                        ingredients={recipe.recipe.ingredients}\n                        />\n                    ))}\n                </div>\n\n                <button className=\"btn load-more\" onClick={loadMore}>Load more</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Recipe","import React, {useState} from 'react'\n\nfunction TodoForm({addTodo}) {\n    const [todoItem, setTodoItem] = useState({\n        id: undefined,\n        task: \"\",\n        completed: false\n    })\n\n    const handleInput = (e) => {\n        setTodoItem({...todoItem, task: e.target.value})\n    }\n\n    const handleSubmit = (e)  => {\n        e.preventDefault()\n        if(todoItem.task.trim()){\n            addTodo({...todoItem,  id: Date.now()})\n            setTodoItem({...todoItem, task: \"\"})\n        }\n    }\n\n    return (\n        <form className=\"add-todo\" onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                placeholder=\"add new todo\"\n                onChange={handleInput}\n                value={todoItem.task}\n            />\n            <button className=\"add\">\n            <i className=\"fas fa-plus-circle add-icon\"></i>\n            </button>\n        </form>\n    )\n}\n\nexport default TodoForm\n","import React from 'react'\n\nfunction TodoItem({todoItem, removeTodo, toggleComplete}){\n    const handleRemoveClick = () => {\n        removeTodo(todoItem.id)\n    }\n\n    const handleToggleComplete = () => {\n        toggleComplete(todoItem.id)\n    }\n\n    return (\n        <li className=\"todo-item\">\n            <span className=\"check\">\n                <i className={\"far fa-check-circle check-icon \" + (todoItem.completed ?  \"completed\" : \"\")}\n                    onClick={handleToggleComplete}\n                ></i>\n            </span>\n            <span className=\"task\">{todoItem.task}</span>\n            <span className=\"trash\">\n                <i\n                 className=\"fas fa-trash-alt trash-icon\"\n                 onClick={handleRemoveClick}\n                >\n               </i>\n            </span>\n        </li>\n    )\n}\n\nexport default TodoItem\n","import React from 'react'\nimport TodoItem from './TodoItem.jsx'\n\nfunction TodoItems({todoLists, removeTodo, toggleComplete}) {\n    return (\n        <ul className=\"todo-items\">\n            {todoLists.map(todoItem => (\n                <TodoItem\n                    key={todoItem.id}\n                    todoItem={todoItem}\n                    removeTodo={removeTodo}\n                    toggleComplete={toggleComplete}\n                />\n            ))}\n        </ul>\n    )\n}\n\nexport default TodoItems\n","import React, {useEffect, useState} from 'react';\nimport TodoForm from './TodoForm.jsx';\nimport TodoItems from './TodoItems.jsx';\n\nconst localStorageKey = \"todo items\"\n\nfunction Todo() {\n    const [todoLists, setTodoLists] = useState([])\n\n    useEffect(()=>{\n        setTodoLists(JSON.parse(localStorage.getItem(localStorageKey)))\n    },[])\n\n    useEffect(()=>{\n        localStorage.setItem(localStorageKey, JSON.stringify(todoLists))\n    }, [todoLists])\n\n    const addTodo = (todoItem) => {\n        setTodoLists([...todoLists, todoItem])\n    }\n\n    const removeTodo = (id) => {\n        setTodoLists(todoLists.filter(todoItem => todoItem.id !== id))\n    }\n\n    const toggleComplete = (id) => {\n        let completUpdated = todoLists.map(todoItem => {\n            if(todoItem.id === id) {\n                return {\n                    ...todoItem,\n                    completed: !todoItem.completed\n                }\n            }\n\n            return todoItem\n        })\n\n        setTodoLists(completUpdated)\n    }\n\n    return (\n        <div className=\"todo-app app-container\">\n            <div className=\"app\">\n                <div className=\"title\">\n                    <i className=\"far fa-clipboard todo-icon\"></i>\n                    Todo\n                </div>\n\n                <TodoForm addTodo={addTodo}/>\n                <TodoItems\n                    todoLists={todoLists}\n                    removeTodo={removeTodo}\n                    toggleComplete={toggleComplete}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Todo","import React from \"react\";\nimport \"./styles/App.scss\";\nimport Cart from \"./components/shopping-cart-app/Cart.jsx\";\nimport ReactRouter from \"./components/react-router-app/ReactRouter.jsx\";\nimport FetchAPI from \"./components/fetchAPI-app/FetchAPI.jsx\";\nimport Gsap from \"./components/gsap-app/Gsap\";\nimport Recipe from \"./components/recipe-app/Recipe.jsx\";\nimport Todo from \"./components/todo-app/Todo.jsx\";\n\nfunction App() {\n\n  return (\n    <>\n      <Cart/>\n      <Todo/>\n      <ReactRouter/>\n      <FetchAPI/>\n      <Gsap/>\n      <Recipe/>\n    </>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render( <App />, document.getElementById(\"root\"));\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById(\"root\")\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}